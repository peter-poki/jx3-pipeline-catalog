apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    lighthouse.jenkins-x.io/prependStepsURL: https://raw.githubusercontent.com/jenkins-x/jx3-pipeline-catalog/90dffaf666a091fb1bcf2d5fd65307ba04de6330/tasks/git-clone/git-clone-pr.yaml
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          workingDir: /workspace/source
        steps:
        - image: gcr.io/jenkinsxio/jx-boot:3.1.23
          name: jx-variables
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops variables
        # - image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
        #   name: build-npmrc
        #   resources: {}
        #   script: |
        #     #!/usr/bin/env bash
        #     jx step credential -s npm-token -k file -f /builder/home/.npmrc --optional=true
        - image: node:14-alpine
          name: build-npm-install
          resources: {}
          script: |
            #!/bin/sh
            npm install
        - image: node:14-alpine
          name: build-npm-lint-first
          resources: {}
          script: |
            #!/bin/sh
            npm run lint
        - image: gcr.io/jenkinsxio/jx-gitops:0.0.439
          script: |
            #!/usr/bin/env bash
            lines_count=$(wc -l linter-output.txt | awk '{print $1}')
            (
              if (( lines_count > 0)); then
                echo "There are problems with linting";
                jx-gitops pr comment -c "<p>There are LINT problems, see: </p><code>$(cat linter-output.txt)</code>";
                exit 1;
              else
                echo "There are NO problems with linting".
                exit 0;
              fi
            )
          name: build-npm-lint-second
        # - image: node:14-alpine
        #   name: build-npm-test
        #   resources: {}
        #   script: |
        #     #!/bin/sh
        #     CI=true DISPLAY=:99 npm test
        - image: node:14-alpine
          name: build-npm-build
          resources: {}
          script: |
            #!/bin/sh
            npm run build
        - image: gcr.io/kaniko-project/executor:debug-v1.3.0
          name: build-container-build
          resources: {}
          script: |
            #!/busybox/sh
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            /kaniko/executor $KANIKO_FLAGS --context=/workspace/source --dockerfile=/workspace/source/Dockerfile --destination=$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION
        - image: gcr.io/jenkinsxio/jx-preview:0.0.135
          name: promote-jx-preview
          resources: {}
          script: |
            #!/usr/bin/env sh
            source /workspace/source/.jx/variables.sh
            jx preview create

  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 240h0m0s
status: {}
